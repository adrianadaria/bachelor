{
  "_args": [
    [
      {
        "raw": "react-chartjs-2",
        "scope": null,
        "escapedName": "react-chartjs-2",
        "name": "react-chartjs-2",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\xampp\\htdocs\\BACHELOR\\bachelor"
    ]
  ],
  "_from": "react-chartjs-2@latest",
  "_id": "react-chartjs-2@2.1.0",
  "_inCache": true,
  "_location": "/react-chartjs-2",
  "_nodeVersion": "5.12.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/react-chartjs-2-2.1.0.tgz_1494187578842_0.06546285771764815"
  },
  "_npmUser": {
    "name": "gor181",
    "email": "udosic.goran@gmail.com"
  },
  "_npmVersion": "3.8.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-chartjs-2",
    "scope": null,
    "escapedName": "react-chartjs-2",
    "name": "react-chartjs-2",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-chartjs-2/-/react-chartjs-2-2.1.0.tgz",
  "_shasum": "847989280633635fe6cc50d52f78cae601d32f24",
  "_shrinkwrap": null,
  "_spec": "react-chartjs-2",
  "_where": "C:\\xampp\\htdocs\\BACHELOR\\bachelor",
  "author": {
    "name": "Goran Udosic"
  },
  "browserify-shim": {
    "react": "global:React",
    "react-dom": "global:ReactDOM",
    "chart.js": "global:Chart"
  },
  "bugs": {
    "url": "https://github.com/gor181/react-chartjs-2/issues"
  },
  "dependencies": {
    "lodash.isequal": "^4.4.0",
    "prop-types": "^15.5.8"
  },
  "description": "react-chartjs-2",
  "devDependencies": {
    "@kadira/storybook": "^2.35.3",
    "babel-core": "^6.18.2",
    "babel-eslint": "^4.1.3",
    "babel-preset-es2015": "^6.13.2",
    "babel-preset-react": "^6.11.1",
    "babel-preset-stage-1": "^6.13.0",
    "babel-register": "^6.18.0",
    "babelify": "^7.3.0",
    "brfs": "^1.4.3",
    "canvas": "^1.6.2",
    "chai": "^3.5.0",
    "chart.js": "^2.3.0",
    "debug": "^2.4.1",
    "enzyme": "^2.6.0",
    "eslint": "^1.6.0",
    "eslint-plugin-react": "^3.5.1",
    "gulp": "^3.9.0",
    "jsdom": "^9.8.3",
    "mocha": "^3.1.2",
    "rcolor": "^1.0.1",
    "react": "^0.14 || ^15.0.0-rc || ^15.0",
    "react-addons-test-utils": "^15.3.2",
    "react-component-gulp-tasks": "git+https://github.com/gor181/react-component-gulp-tasks.git",
    "react-dom": "^0.14 || ^15.0.0-rc || ^15.0",
    "sinon": "^1.17.6"
  },
  "directories": {},
  "dist": {
    "shasum": "847989280633635fe6cc50d52f78cae601d32f24",
    "tarball": "https://registry.npmjs.org/react-chartjs-2/-/react-chartjs-2-2.1.0.tgz"
  },
  "gitHead": "459504b79ba1917745c98861ba646185a22975b6",
  "homepage": "https://github.com/gor181/react-chartjs-2",
  "keywords": [
    "chart",
    "chart-js",
    "chart.js",
    "react-chartjs-2",
    "react chart.js"
  ],
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "gor181",
      "email": "udosic.goran@gmail.com"
    }
  ],
  "name": "react-chartjs-2",
  "optionalDependencies": {},
  "peerDependencies": {
    "chart.js": "^2.3",
    "react": "^0.14 || ^15.0.0-rc || ^15.0",
    "react-dom": "^0.14 || ^15.0.0-rc || ^15.0"
  },
  "readme": "[![build status](\thttps://img.shields.io/travis/gor181/react-chartjs-2.svg?branch=master&style=flat-square)](https://travis-ci.org/gor181/react-chartjs-2)\n[![version](https://img.shields.io/npm/v/react-chartjs-2.svg?style=flat-square)](https://www.npmjs.com/package/react-chartjs-2)\n[![downloads](https://img.shields.io/npm/dm/react-chartjs-2.svg?style=flat-square)](https://npm-stat.com/charts.html?package=react-chartjs-2&from=2016-01-01)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg?style=flat-square)](http://opensource.org/licenses/MIT)\n\n# react-chartjs-2\n\nReact wrapper for [Chart.js 2](http://www.chartjs.org/docs/#getting-started)\nOpen for PRs and contributions!\n\n# UPDATE to 2.x\nAs of 2.x we have made chart.js a peer dependency for greater flexibility. Please add chart.js as a dependency on your project to use 2.x. Currently, 2.4.x is the recommended version of chart.js to use.\n\n# Looking for Contributors!\nActively looking for contributors as for the moment I do not have enough time to dedicate for maintaining this lib.\nAll contributors can add themselves to Contributors section at the bottom of README.\n\n## Demo & Examples\n\nLive demo: [gor181.github.io/react-chartjs-2](http://gor181.github.io/react-chartjs-2/)\n\nTo build the examples locally, run:\n\n```bash\nnpm install\nnpm start\n```\n\nThen open [`localhost:8000`](http://localhost:8000) in a browser.\n\n## Demo & Examples via React Storybook\n\nWe have to build the package, then you can run storybook.\n\n```bash\nnpm run build\nnpm run storybook\n```\n\nThen open [`localhost:6006`](http://localhost:6006) in a browser.\n\n\n## Installation via NPM\n\n```bash\nnpm install react-chartjs-2 chart.js --save\n```\n\n\n## Usage\n\nCheck example/src/components/* for usage.\n\n```js\nimport {Doughnut} from 'react-chartjs-2';\n\n<Doughnut data={...} />\n```\n\n### Properties\n\n* data: (PropTypes.object | PropTypes.func).isRequired,\n* width: PropTypes.number,\n* height: PropTypes.number,\n* legend: PropTypes.object,\n* options: PropTypes.object,\n* redraw: PropTypes.bool,\n* getDatasetAtEvent: PropTypes.func,\n* getElementAtEvent: PropTypes.func,\n* getElementsAtEvent: PropTypes.func\n* onElementsClick: PropTypes.func, // alias for getElementsAtEvent (backward compatibility)\n\n### Custom size\nIn order for Chart.js to obey the custom size you need to set `maintainAspectRatio` to false, example:\n\n```js\n<Bar\n\tdata={data}\n\twidth={100}\n\theight={50}\n\toptions={{\n\t\tmaintainAspectRatio: false\n\t}}\n/>\n```\n\n### Chart.js instance\nChart.js instance can be accessed by placing a ref to the element as:\n\n```js\nrender() {\n\tcomponentDidMount() {\n\t\tconsole.log(this.refs.chart.chart_instance); // returns a Chart.js instance reference\n\t}\n\treturn (\n\t\t<Doughnut ref='chart' data={data} />\n\t)\n}\n```\n\n### Getting context for data generation\nCanvas node and hence context, that can be used to create CanvasGradient background,\nis passed as argument to data if given as function:\n\nThis approach is useful when you want to keep your components pure.\n\n```js\nrender() {\n\tconst data = (canvas) => {\n\t\tconst ctx = canvas.getContext(\"2d\")\n\t\tconst gradient = ctx.createLinearGradient(0,0,100,0);\n\t\t...\n\t\treturn {\n\t\t\t...\n\t\t\tbackgroundColor: gradient\n\t\t\t...\n\t\t}\n\t}\n\n\treturn (\n\t\t<Line data={data} />\n\t)\n}\n```\n\n### Chart.js Defaults\nChart.js defaults can be set by importing the `defaults` object:\n\n```javascript\nimport { defaults } from 'react-chartjs-2';\n\n// Disable animating charts by default.\ndefaults.global.animation = false;\n```\n\nIf you want to bulk set properties, try using the [lodash.merge](https://lodash.com/docs/#merge) function. This function will do a deep recursive merge preserving previously set values that you don't want to update.\n\n```js\nimport { defaults } from 'react-chartjs-2';\nimport merge from 'lodash.merge';\n// or\n// import { merge } from 'lodash';\n\nmerge(defaults, {\n\tglobal: {\n  \t\tanimation: false,\n\t\tline: {\n\t\t\tborderColor: '#F85F73',\n\t\t},\n\t},\n});\n```\n\n### Chart.js object\n\nYou can access the internal Chart.js object to register plugins or extend charts like this:\n\n```JavaScript\nimport { Chart } from 'react-chartjs-2';\n\ncomponentWillMount() {\n\tChart.pluginService.register({\n\t\tafterDraw: function (chart, easing) {\n\t\t\t// Plugin code.\n\t\t}\n\t});\n}\n```\n\n### Events\n\n#### onElementsClick || getElementsAtEvent (function)\n\nA function to be called when mouse clicked on chart elememts, will return all element at that point as an array. [Check](https://github.com/chartjs/Chart.js/blob/master/docs/09-Advanced.md#getelementsatevente)\n\n```js\n{\n\tonElementsClick: (elems) => {},\n\tgetElementsAtEvent: (elems) => {},\n\t// `elems` is an array of chartElements\n}\n\n```\n#### getElementAtEvent (function)\n\nCalling getElementAtEvent(event) on your Chart instance passing an argument of an event, or jQuery event, will return the single element at the event position. If there are multiple items within range, only the first is returned [Check](https://github.com/chartjs/Chart.js/blob/master/docs/09-Advanced.md#getelementatevente)\n\n```js\n{\n\tgetElementAtEvent: (elems) => {},\n  // => returns the first element at the event point.\n}\n```\n\n#### getDatasetAtEvent (function)\n\nLooks for the element under the event point, then returns all elements from that dataset. This is used internally for 'dataset' mode highlighting [Check](https://github.com/chartjs/Chart.js/blob/master/docs/09-Advanced.md#getdatasetatevente)\n\n```js\n{\n\tgetDatasetAtEvent: (dataset) => {}\n\t// `dataset` is an array of chartElements\n}\n```\n\n## Development (`src`, `lib` and the build process)\n\n**NOTE:** The source code for the component is in `src`. A transpiled CommonJS version (generated with Babel) is available in `lib` for use with node.js, browserify and webpack. A UMD bundle is also built to `dist`, which can be included without the need for any build system.\n\nTo build, watch and serve the examples (which will also watch the component source), run `npm start`. If you just want to watch changes to `src` and rebuild `lib`, run `npm run watch` (this is useful if you are working with `npm link`).\n\n## Thanks\n\nJed Watson for making react-component yo builder!\n\n## License\n\nMIT Licensed\nCopyright (c) 2016 Goran Udosic\n\n## Contributors\nJeremy Ayerst [@jerairrest](https://github.com/jerairrest)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gor181/react-chartjs-2.git"
  },
  "scripts": {
    "build": "gulp clean && NODE_ENV=production gulp build",
    "build-storybook": "build-storybook",
    "examples": "gulp dev:server",
    "lint": "eslint ./; true",
    "publish:site": "NODE_ENV=production gulp publish:examples",
    "release": "NODE_ENV=production gulp release",
    "start": "gulp dev",
    "storybook": "start-storybook -p 6006",
    "test": "mocha test/config/setup.js test/__tests__/**/*",
    "watch": "gulp watch:lib"
  },
  "version": "2.1.0"
}
